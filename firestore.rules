
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Users collection: users can read their own data and update it.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null; // Any authenticated user can create their own doc
    }

    // Contracts collection: only owners can CRUD their own contracts.
    match /contracts/{contractId} {
      allow read, update, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }
    
    // Receipts collection: only owners can CRUD their own receipts.
    match /receipts/{receiptId} {
        allow read, update, delete: if isOwner(resource.data.userId);
        allow create: if isOwner(request.resource.data.userId);
    }
    
    // SharedContractVersions: Anyone can read, only owner can create/revoke.
    // Anyone can update the `brandHasViewed` field.
    match /sharedContractVersions/{versionId} {
      allow read: if true; // Publicly readable with the link
      allow create: if isOwner(request.resource.data.userId);
      // Allow anyone to update *only* the brandHasViewed and lastViewedByBrandAt fields.
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['brandHasViewed', 'lastViewedByBrandAt']) || isOwner(resource.data.userId);
    }
    
    // ContractComments: Anyone can create, anyone can read, owner can update/delete.
    match /contractComments/{commentId} {
      // Anyone can create a comment if they provide the required fields and the creatorId matches the target.
      allow create: if request.resource.data.creatorId != null; 
      // Anyone can read comments associated with a shared version.
      allow read: if true; 
      // Only the creator can update (e.g., add replies) or delete comments.
      allow update, delete: if isOwner(resource.data.creatorId);
    }

    // RedlineProposals: Anyone can create, anyone can read, owner can update/delete.
    match /redlineProposals/{proposalId} {
      // Anyone can create a proposal.
      allow create: if request.resource.data.creatorId != null;
      // Anyone can read proposals.
      allow read: if true;
      // Only the creator can update (accept/reject) or delete.
      allow update, delete: if isOwner(resource.data.creatorId);
    }
  }
}
    