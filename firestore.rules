
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; 
    }

    // Rules for the 'contracts' collection
    match /contracts/{contractId} {
      allow read: if true; 
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Rules for 'paymentIntents' collection
    match /paymentIntents/{intentId} {
      allow read: if request.auth != null && (
                    request.auth.uid == resource.data.userId ||
                    request.auth.uid == resource.data.creatorId
                  );
      allow create, update, delete: if false; 
    }

    // Rules for 'payments' collection
    match /payments/{paymentId} {
       allow read: if request.auth != null && (
                    request.auth.uid == resource.data.userId || 
                    request.auth.uid == resource.data.creatorId 
                  );
      allow create, update, delete: if false; 
    }

    // Rules for 'emailLogs' collection
    match /emailLogs/{logId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create, update, delete: if false; 
    }

    // Rules for the 'receipts' collection
    match /receipts/{receiptId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Rules for 'userTransactions' collection (placeholder for banking feature)
    match /userTransactions/{transactionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
