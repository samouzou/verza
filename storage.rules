rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o { // This matches all files in your bucket

    // Rules for user avatars
    match /avatars/{userId}/{allPaths=**} {
      // Allow public read for avatars (common for profile pictures)
      allow read: if true;
      // Allow authenticated users to write only to their own avatar path
      // And add some constraints on size and type
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 2 * 1024 * 1024 // Max 2MB
                   && request.resource.contentType.matches('image/.*'); // Only image types
    }

    // Rules for contract files
    match /contracts/{ownerId}/{fileName} {
      allow read, write: if request.auth != null && (
            // User is the direct owner of the file path
            request.auth.uid == ownerId ||
            // OR: User is an agency owner, and the ownerId in the path is their agency's ID
            (
                exists(/databases/$(database)/documents/agencies/$(ownerId)) &&
                get(/databases/$(database)/documents/agencies/$(ownerId)).data.ownerId == request.auth.uid
            ) ||
            // OR: User is the talent on a contract that links to this file path
            exists(/databases/$(database)/documents/contracts/{contractId})
      )
      && request.resource.size < 10 * 1024 * 1024 // Max 10MB for contracts
      && (
        request.resource.contentType.matches('application/pdf') ||
        request.resource.contentType.matches('application/msword') ||
        request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
        request.resource.contentType.matches('text/plain') ||
        request.resource.contentType.matches('image/jpeg') || // If contracts can be images
        request.resource.contentType.matches('image/png')
      );
    }
    
    // Rules for receipt images
    match /receipts/{userId}/{fileName} {
      // Allow an authenticated user to read their own receipt images
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow an authenticated user to write (upload, update, delete) their own receipt images
      // with constraints on file size and type
      allow write: if request.auth != null && request.auth.uid == userId
                   && request.resource.size < 4 * 1024 * 1024 // Max 4MB for receipts
                   && request.resource.contentType.matches('image/.*'); // Only image types (jpeg, png, gif, etc.)
    }

    // Add rules for other paths if needed, e.g.,
    // match /otherFolder/{userId}/{allPaths=**} { ... }
  }
}
